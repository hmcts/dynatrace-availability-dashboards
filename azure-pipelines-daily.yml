---
trigger: none

resources:
  repositories:
    - repository: cnp-azuredevops-libraries
      type: github
      ref: refs/heads/master
      name: hmcts/cnp-azuredevops-libraries
      endpoint: 'hmcts (1)'

parameters:
  - name: environment_components
    type: object
    default:
      - deployment: sbox_dynatrace_availability_dashboards
        environment: sbox
        component: dt-availability-dashboards
        service_connection: dcd-cftapps-sbox
        department: cft
        aks:
          subscription_id: b72ab7b7-723f-4b18-b6f6-03b0f2c6a1bb
          resource_group: cft-sbox-00-rg
          name: cft-sbox-00-aks

variables:
  - name: timeoutInMinutes
    value: 60
  - name: agentPool
    value: ubuntu-latest
  - template: vars/input-variables.yaml@cnp-azuredevops-libraries

stages:
  - ${{ each deployment in parameters.environment_components }}:
      - stage: ${{ deployment.deployment }}
        dependsOn: ${{ deployment.dependsOn }}
        jobs:
          - job:
            pool:
              vmImage: ${{ variables.agentPool }}
            timeoutInMinutes: ${{ variables.timeoutInMinutes }}
            steps:
              - task: AzureCLI@2
                inputs:
                  azureSubscription: ${{ deployment.service_connection }}
                  scriptType: 'bash'
                  scriptLocation: 'inlineScript'
                  inlineScript: |
                    az account set --subscription ${{ deployment.aks.subscription_id }}
                    az aks get-credentials \
                      --resource-group ${{ deployment.aks.resource_group }} \
                      --name ${{ deployment.aks.name }} --admin

                    printf "\nInstall python requirements\n\n"
                    cat scripts/requirements.txt
                    printf "\n\n"
                    python3 -m pip install --quiet -r scripts/requirements.txt
                    printf "\n\n"

                    python3 scripts/generate_synthetic_monitors.py \
                      --environment ${{ deployment.environment }} \
                      --department ${{ deployment.department }} \
                      --context ${{ deployment.aks.name }}-admin
