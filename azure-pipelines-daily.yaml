---
trigger: none
pr: none
schedules:
  # Run job at 9AM daily
  - cron: "0 9 * * *"
    always: true
    displayName: Fetch cluster ingress updates
    branches:
      include:
        - main

resources:
  repositories:
    - repository: cnp-azuredevops-libraries
      type: github
      ref: refs/heads/master
      name: hmcts/cnp-azuredevops-libraries
      endpoint: 'hmcts (1)'

parameters:
  - name: kvConnectedServiceName
    default: 'azurerm-sandbox'
  - name: environment_components
    type: object
    default:
      - deployment: sbox_dt_availability_dashboards_yaml
        environment: sbox
        component: dt-availability-dashboards-yaml
        service_connection: dcd-cftapps-sbox
        department: cft
        aks:
          subscription: DCD-CFTAPPS-SBOX
          resource_group: cft-sbox-00-rg
          name: cft-sbox-00-aks

      - deployment: demo_dt_availability_dashboards_yaml
        environment: demo
        component: dt-availability-dashboards-yaml
        service_connection: dcd-cftapps-demo
        department: cft
        aks:
          subscription: DCD-CFTAPPS-DEMO
          resource_group: cft-demo-00-rg
          name: cft-demo-00-aks

      - deployment: ithc_dt_availability_dashboards_yaml
        environment: ithc
        component: dt-availability-dashboards-yaml
        service_connection: dcd-cftapps-ithc
        department: cft
        aks:
          subscription: DCD-CFTAPPS-ITHC
          resource_group: cft-ithc-00-rg
          name: cft-ithc-00-aks

      - deployment: ptlsbox_dt_availability_dashboards_yaml
        environment: ptlsbox
        component: dt-availability-dashboards-yaml
        service_connection: DTS-CFTSBOX-INTSVC
        department: cft
        aks:
          subscription: DTS-CFTSBOX-INTSVC
          resource_group: cft-ptlsbox-00-rg
          name: cft-ptlsbox-00-aks

      - deployment: aat_dt_availability_dashboards_yaml
        environment: aat
        component: dt-availability-dashboards-yaml
        service_connection: DCD-CFTAPPS-STG
        department: cft
        aks:
          subscription: DCD-CFTAPPS-STG
          resource_group: cft-aat-00-rg
          name: cft-aat-00-aks

      - deployment: perftest_dt_availability_dashboards_yaml
        environment: perftest
        component: dt-availability-dashboards-yaml
        service_connection: DCD-CFTAPPS-TEST
        department: cft
        aks:
          subscription: DCD-CFTAPPS-TEST
          resource_group: cft-perftest-00-rg
          name: cft-perftest-00-aks

      - deployment: test_dt_availability_dashboards_yaml
        environment: perftest
        component: dt-availability-dashboards-yaml
        service_connection: DTS-SHAREDSERVICES-TEST
        department: sds
        aks:
          subscription: DTS-SHAREDSERVICES-TEST
          resource_group: ss-test-00-rg
          name: ss-test-00-aks

variables:
  - name: timeoutInMinutes
    value: 60
  - name: agentPool
    value: ubuntu-latest
  - template: vars/input-variables.yaml@cnp-azuredevops-libraries

stages:
  - ${{ each deployment in parameters.environment_components }}:
      - stage: ${{ deployment.deployment }}
        dependsOn: ${{ deployment.dependsOn }}
        jobs:
          - job: ${{ deployment.environment }}_generate_yaml
            displayName: ${{ deployment.environment }} - generate yaml
            pool:
              vmImage: ${{ variables.agentPool }}
            timeoutInMinutes: ${{ variables.timeoutInMinutes }}
            steps:
              - checkout: self
                persistCredentials: true
                clean: true

              - task: AzureKeyVault@1
                displayName: 'Get GitHub API token from Keyvault'
                inputs:
                  runAsPreJob: false
                  ConnectedServiceName: ${{ parameters.kvConnectedServiceName }}
                  keyVaultName: 'infra-vault-nonprod'
                  secretsFilter: 'github-api-token'

              - task: AzureCLI@2
                displayName: ${{ deployment.environment }} - generate YAML definitions
                inputs:
                  azureSubscription: ${{ deployment.service_connection }}
                  scriptType: 'bash'
                  scriptPath: 'scripts/autogenerate_yaml_runner.sh'
                  arguments: '${{ deployment.aks.subscription }} ${{ deployment.aks.resource_group }} ${{ deployment.aks.name }} ${{ deployment.environment }} ${{ deployment.department }}'

              - task: Bash@3
                displayName: Push changes and create PR
                inputs:
                  filePath: 'scripts/push_and_create_pr.sh'
                  arguments: '${{ deployment.environment }} $(github-api-token)'
